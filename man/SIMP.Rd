% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SIMP.R
\name{SIMP}
\alias{SIMP}
\title{Fit Bayesian simultaneous partial envelope model}
\usage{
SIMP(
  X1C,
  X1D,
  X2,
  Y,
  dx,
  dy,
  n.iter = 20000,
  n.chains = 1,
  tau = 0.1,
  init_method = "envlps",
  init_params = NULL,
  Metro_method = "RW",
  HMC_steps = 10,
  autotune = TRUE,
  tune.accpt.prop.lower = 0.3,
  tune.accpt.prop.upper = 0.4,
  tune.incr = 0.05,
  burnin.prop = 0.5,
  tune.burnin.prop = 0.5,
  tune_nterm = 50,
  show_progress = TRUE,
  chains_parallel = FALSE,
  cores = 1,
  method.idx = 1,
  random.seed = T,
  ...
)
}
\arguments{
\item{X1C}{Design matrix of the continuous part of the predictors of interest.
Must have the same number of rows as \code{Y}.}

\item{X1D}{Design matrix of the discrete part of the predictors of interest.
Must have the same number of rows as \code{Y}.}

\item{X2}{Design matrix of the nuisance predictors. Must have the same number of rows as \code{Y}.}

\item{Y}{Response matrix. Must have the same number of rows as \code{X}.}

\item{dx}{Partial predictor envelope dimension. Must be an integer between 0 and \code{ncol(X1C)}.}

\item{dy}{Partial response envelope dimension. Must be an integer between 0 and \code{ncol(Y)}.}

\item{n.iter}{Number of Markov chain iterations to run in each chains. *Includes burn-in*.}

\item{n.chains}{Number of independent chains to run.}

\item{tau}{The Metropolis tuning parameter}

\item{init_method}{Initialization. Available options are "envlps" for the consistent initialization
we proposed , "generate" for random generation, or "input"
for giving parameters via input param init_params.}

\item{init_params}{Input parameter values if the initial method is "input".}

\item{Metro_method}{method for metropolis step for sampling A or B. Available options are "RW" for
Random walk metropolis, "HMC" for Hamiltonian monte carlo, and "NUTS" for No-U-Turn sampler.
"RW" is recommended to use only for accuracy and especially efficiency through our testing.}

\item{HMC_steps}{Number of steps in Hamiltonian monte carlo in each iteration.}

\item{autotune}{logical. Should the Metropolis tuning parameter
be tuned during burn-in via adaptation?}

\item{tune.accpt.prop.lower}{Lower bound for the acceptance rate of the metropolis step}

\item{tune.accpt.prop.upper}{Upper bound for the acceptance rate of the metropolis step}

\item{tune.incr}{Adjustment magnitude in tuning tau.}

\item{burnin.prop}{Proportion for burn-in period among all iterations.}

\item{tune.burnin.prop}{Proportion for the Metropolis tuning parameter be tuned
among burn-in period.}

\item{tune_nterm}{After which iteration the Metropolis tuning parameter should be tuned.}

\item{show_progress}{Logical. Indicate whether the progress bar show or off.}

\item{chains_parallel}{Logical. Indicate whether we should use parallel computing for each chain.}

\item{cores}{Number of cores used in parallel computing.}

\item{method.idx}{Choice of the method of initialization. There are 6 methods in total. The default one is
the first one (consistent estimator in the manuscript). Always keep to be the default value
if no special reasons.}

\item{random.seed}{Whether we should fix random seed at the start of running for each chain.}

\item{...}{all other useful inputs.}
}
\description{
Fit Bayesian simultaneous partial envelope model
}
\examples{
\dontrun{
library(SIMP)
library(Renvlp)
data(wheatprotein) # Load Renvlp package only for wheatprotein dataset.
set.seed(1)
X1C = wheatprotein[, 4:5]
X1D = as.matrix(wheatprotein[, 8], ncol = 1)
X2 = wheatprotein[, 6:7]
Y = wheatprotein[, 1:3]
MC_output <- SIMP(X1C = X1C, X1D = X1D, X2 = X2,
                  Y = Y, dx = 1, dy = 1, n.iter = 1e4)
}
}
\references{
Yanbo Shen, Yeonhee Park, Saptarshi Chakraborty, Chunming Zhang(202X)
}
